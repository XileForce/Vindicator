UKM=/data/UKM;
BB=$UKM/busybox;

cpuread() {
	while read FREQ UVOLT UNIT; do
	if [ $FREQ == $1 ]; then
		$BB echo $UVOLT;
		return;
	fi;
	done < $P;
}

cpuwrite() {
	VOLTARR="";
	while read FREQ UVOLT UNIT; do
	if [ $FREQ == $1 ]; then
		VOLTARR="$VOLTARR $2";
	else
		VOLTARR="$VOLTARR $UVOLT";
	fi;
	done < $P;

	$BB echo "$VOLTARR" > $P 2> /dev/null;
}

coreread() {
  VOLTAGE=0;
  while read UVOLT UNIT; do
    VOLTAGE=$((VOLTAGE + 1));
    if [ "$VOLTAGE" == $1 ]; then
      $BB echo $UVOLT;
      return;
    fi;
  done < $P;
}

corewrite() {
  VOLTARR="";
  VOLTAGE=0;
  while read UVOLT UNIT; do
    VOLTAGE=$((VOLTAGE + 1));
    if [ "$VOLTAGE" == $1 ]; then
      VOLTARR="$VOLTARR $2";
    else
      VOLTARR="$VOLTARR $UVOLT";
    fi;
  done < $P;

  $BB echo $VOLTARR > $P 2> /dev/null;
}

case $1 in
	cpuvoltglobal)
		VOLT_PROF=$UKM/files/volt_prof;
		P=/sys/devices/system/cpu/cpu0/cpufreq/UV_mV_table;
		
		if [ -f $P ]; then
			if [[ ! -z $3 ]]; then
				VOLT=$3;
				CURR_VOLT=`$BB cat $VOLT_PROF`;
				NEW_VOLT=$((VOLT - CURR_VOLT));
				$BB echo $VOLT > $VOLT_PROF;
				
				VOLTARR="";
				while read FREQ UVOLT UNIT; do
					VOLTARR="$VOLTARR $((UVOLT + NEW_VOLT))";
				done < $P;

				$BB echo "$VOLTARR" > $P 2> /dev/null;
			fi;
			
			V=`$BB cat $VOLT_PROF 2> /dev/null`;
			
			if [ -z "$V" ]; then $BB echo 0; else $BB echo $V; fi;
		fi;
	;;
	cpuvolt)
		P=/sys/devices/system/cpu/cpu0/cpufreq/UV_mV_table;
		
		if [ -f $P ]; then
			if [[ ! -z $3 ]]; then
				cpuwrite $2 $3;
			fi;
		
			$BB echo `cpuread $2`;
		fi;
	;;
	gpuvolt)
		P=/sys/devices/system/cpu/cpu0/cpufreq/gpu_mv_table;
		
		if [ -f $P ]; then
			if [[ ! -z $3 ]]; then
				corewrite $2 $3;
			fi;
			
			$BB echo $(coreread $2);
		fi;
	;;
	corevolt)
		P=/sys/devices/virtual/misc/customvoltage/core_voltages;
		
		if [ -f $P ]; then
			if [[ ! -z $3 ]]; then
				corewrite $2 $3;
			fi;
			
			$BB echo `coreread $2`;
		fi;
	;;
	ivavolt)
		P=/sys/devices/virtual/misc/customvoltage/iva_voltages;
		
		if [ -f $P ]; then
			if [[ ! -z $3 ]]; then
				corewrite $2 $3;
			fi;
			
			$BB echo `coreread $2`;
		fi;
	;;
	regulatorvolt)
		P=/sys/devices/virtual/misc/customvoltage/regulator_voltages;
		
		if [ -f $P ]; then
			if [[ ! -z $3 ]]; then
				cpuwrite $2 $3;
			fi;
			$BB echo `cpuread $2`;
		fi;
	;;
esac;
